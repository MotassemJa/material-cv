@import '~@angular/material/theming';
// Plus imports for other components in your app.

/* roboto-300 - latin_latin-ext */
// @font-face {
//     font-family: 'Roboto';
//     font-style: normal;
//     font-weight: 300;
//     src: url('assets/fonts/roboto-v18-latin_latin-ext-300.eot'); /* IE9 Compat Modes */
//     src: local('Roboto Light'), local('Roboto-Light'),
//       url('assets/fonts/roboto-v18-latin_latin-ext-300.eot?#iefix') format('embedded-opentype'),
//       /* IE6-IE8 */ url('assets/fonts/roboto-v18-latin_latin-ext-300.woff2') format('woff2'),
//       /* Super Modern Browsers */ url('assets/fonts/roboto-v18-latin_latin-ext-300.woff') format('woff'),
//       /* Modern Browsers */ url('assets/fonts/roboto-v18-latin_latin-ext-300.ttf') format('truetype'),
//       /* Safari, Android, iOS */ url('assets/fonts/roboto-v18-latin_latin-ext-300.svg#Roboto') format('svg'); /* Legacy iOS */
//   }
//   /* roboto-regular - latin_latin-ext */
//   @font-face {
//     font-family: 'Roboto';
//     font-style: normal;
//     font-weight: 400;
//     src: url('assets/fonts/roboto-v18-latin_latin-ext-regular.eot'); /* IE9 Compat Modes */
//     src: local('Roboto'), local('Roboto-Regular'),
//       url('assets/fonts/roboto-v18-latin_latin-ext-regular.eot?#iefix') format('embedded-opentype'),
//       /* IE6-IE8 */ url('assets/fonts/roboto-v18-latin_latin-ext-regular.woff2') format('woff2'),
//       /* Super Modern Browsers */ url('assets/fonts/roboto-v18-latin_latin-ext-regular.woff') format('woff'),
//       /* Modern Browsers */ url('assets/fonts/roboto-v18-latin_latin-ext-regular.ttf') format('truetype'),
//       /* Safari, Android, iOS */ url('assets/fonts/roboto-v18-latin_latin-ext-regular.svg#Roboto') format('svg'); /* Legacy iOS */
//   }
//   /* roboto-700 - latin_latin-ext */
//   @font-face {
//     font-family: 'Roboto';
//     font-style: normal;
//     font-weight: 700;
//     src: url('assets/fonts/roboto-v18-latin_latin-ext-700.eot'); /* IE9 Compat Modes */
//     src: local('Roboto Bold'), local('Roboto-Bold'), url('assets/fonts/roboto-v18-latin_latin-ext-700.eot?#iefix') format('embedded-opentype'),
//       /* IE6-IE8 */ url('assets/fonts/roboto-v18-latin_latin-ext-700.woff2') format('woff2'),
//       /* Super Modern Browsers */ url('assets/fonts/roboto-v18-latin_latin-ext-700.woff') format('woff'),
//       /* Modern Browsers */ url('assets/fonts/roboto-v18-latin_latin-ext-700.ttf') format('truetype'),
//       /* Safari, Android, iOS */ url('assets/fonts/roboto-v18-latin_latin-ext-700.svg#Roboto') format('svg'); /* Legacy iOS */
//   }
  
  // and custom font stuff
  $cv-typography: mat-typography-config(
    $font-family: '"Roboto", sans-serif'
  );

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core($cv-typography);


// Define black mat color palette
$mat-black: (
    50 : #e8e8e8,
    100 : #c5c5c5,
    200 : #9f9f9f,
    300 : #787878,
    400 : #5b5b5b,
    500 : #3e3e3e,
    600 : #383838,
    700 : #303030,
    800 : #282828,
    900 : #1b1b1b,
    A100 : #f07575,
    A200 : #eb4747,
    A400 : #ff0000,
    A700 : #e60000,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #ffffff,
        400 : #ffffff,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #ffffff,
        A400 : #ffffff,
        A700 : #ffffff,
    )
);



// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$candy-app-primary: mat-palette($mat-black);
$candy-app-accent:  mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn:    mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);